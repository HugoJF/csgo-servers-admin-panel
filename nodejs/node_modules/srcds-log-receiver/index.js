"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var dgram = require("dgram");
var events = require("events");
var parser = require("./PacketParser");
var LogReceiver = (function (_super) {
    __extends(LogReceiver, _super);
    function LogReceiver(opts) {
        _super.call(this);
        opts = opts || {};
        opts.address = opts.address || "0.0.0.0";
        opts.port = opts.port || 9871;
        opts.definedSources = opts.definedSources || [];
        opts.requirePassword = opts.requirePassword || false;
        this.opts = opts;
        this.parser = new parser.LogMessageConstructor(opts);
        this.createSocket();
    }
    LogReceiver.prototype.createSocket = function () {
        this.socket = dgram.createSocket('udp4', this.handleMessage.bind(this));
        this.socket.bind(this.opts.port, this.opts.address);
    };
    LogReceiver.prototype.handleMessage = function (message, senderInfo) {
        var logMessage = this.parser.GetLogMessage(message, senderInfo);
        if (logMessage.isValid) {
            this.emit("data", logMessage);
        }
        else {
            this.emit("invalid", logMessage);
        }
    };
    return LogReceiver;
}(events.EventEmitter));
exports.LogReceiver = LogReceiver;
var magicBytePassword = 0x53, magicByteNoPassword = 0x52;
(function (LogType) {
    LogType[LogType["NoPassword"] = magicByteNoPassword] = "NoPassword";
    LogType[LogType["Password"] = magicBytePassword] = "Password";
})(exports.LogType || (exports.LogType = {}));
var LogType = exports.LogType;
//# sourceMappingURL=index.js.map